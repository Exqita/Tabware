do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==5) then v29=nil;v29=function(v30,v31,v32)local v38=0;local v39;local v40;local v41;while true do if (v38==0) then v39=v30[1];v40=v30[2];v38=1;end if (v38==1) then v41=v30[3];return function(...)local v65=1;local v66= -1;local v67={...};local v68=v11(#,...) -1;local function v69()local v39=v39;local v40=v40;local v41=v41;local v27=v27;local v73={};local v74={};local v75={};for v83=(0 + 0) -0,v68 do if ((v83>=v41) or ((3316 -(320 + 169))>(4644 -(414 + 37)))) then v73[v83-v41]=v67[v83 + 1 + 0];else v75[v83]=v67[v83 + 1 + 0];end end local v76=(v68-v41) + 1;local v77;local v78;while true do local v84=0;local v85;while true do if ((v84==(0 -0)) or ((1668 -(986 + 240))==((11409 -5399) -(60 + 1172)))) then v85=(1114 -(848 + 266)) -0;while true do if (((1396 + 250)<=1675) and (v85==(1 + (1644 -(76 + 1568))))) then if (((1509 -(396 + 89))==(2133 -1109)) and (v78<=(5 + 5))) then if ((v78<=(9 -5)) or ((10520 -5745)<=(51 + 3144))) then if ((v78<=((1168 -(366 + 799)) -2)) or ((701 + 1646)>(743 + 3303))) then if ((v78==(0 + 0)) or ((1064 + 2308)<(828 + 1816))) then v75[v77[806 -(132 + 672)]][v77[1047 -(754 + 290)]]=v77[(10 -6) + 0];else do return;end end elseif (((5063 -(672 + 1221))<=(4000 -(18 + 61))) and (v78<=(1 + (1198 -(191 + 1006))))) then v75[v77[1 + 1 + 0]]=v75[v77[(4 -1) + 0]][v77[10 -6]];elseif ((v78==(1532 -(202 + 1327))) or ((528 + 680)>=(4068 -(196 + 894)))) then local v108=1655 -(718 + 937);local v109;while true do if ((v108==(0 -0)) or ((4868 -1253)<(1245 + 2083))) then v109=v77[1 + 1];v75[v109]=v75[v109](v12(v75,v109 + (1814 -(1789 + 24)),v77[10 -7]));break;end end else local v110=(752 + 1168) -(32 + 1888);local v111;local v112;local v113;local v114;while true do if ((v110==(1606 -(919 + (1610 -924)))) or ((400 + 47)>(948 -466))) then v66=(v113 + v111) -(1 -0);v114=0 + 0;v110=625 -(528 + 95);end if (((6785 -5163)>(3408 -(1758 + 48))) and (v110==(1 + 1 + 0))) then for v134=v111,v66 do local v135=0 + 0;local v136;while true do if ((0==v135) or (1926<(1657 -(211 + 354)))) then v136=0 -0;while true do if (((23 + 313)<4817) and (v136==(0 + 0 + 0))) then v114=v114 + (1094 -(872 + 221));v75[v134]=v112[v114];break;end end break;end end end break;end if ((v110==(0 + 0)) or ((3317 -(834 + 100))<(265 + 1795))) then local v129=122 -(85 + 37);while true do if ((v129==(239 -(186 + 53))) or (((8127 -(130 + 13)) -(5168 + 287))==(2789 + 613))) then v111=v77[363 -((623 -402) + (928 -(317 + 471)))];v112,v113=v27(v75[v111](v12(v75,v111 + 1 + 0,v77[248 -(106 + 139)])));v129=2 -1;end if (((591 -197)<((20165 -9769) -6224)) and (v129==(4 -3))) then v110=1835 -(855 + 979);break;end end end end end elseif (((1605 -(730 + 205))>(194 + 269)) and (v78<=(3 + 4))) then if ((v78<=(2 + 3)) or ((9360 -5829)<(2443 + 759))) then v75[v77[1328 -(256 + 1070)]]=v77[8 -5];elseif ((v78>(8 -2)) or ((1827 + 1123)>=(5894 -((1697 -788) + 717)))) then v75[v77[1 + 1]]=v32[v77[(5 -3) + 1]];else v75[v77[2 + 0]]=v29(v40[v77[11 -8]],nil,v32);end elseif (((5455 -(893 + 87))<(5077 -(168 + 294))) and (v78<=((17 + 0) -9))) then local v99=0 + 0;local v100;local v101;while true do if ((0==v99) or ((1404 + 2086)==(4288 -(38 + 122)))) then local v122=0 -0;while true do if (((5548 -(458 + 1306))>=((5740 -2381) + 141)) and (v122==(1 + 0))) then v99=154 -(89 + 64);break;end if ((v122==0) or ((4987 -(178 + 82 + 1720))>(4712 + 227))) then v100=1706 -(1629 + (1881 -(705 + 1099)));v101=nil;v122=1152 -(742 + 409);end end end if (((1 + 0)==v99) or ((80 + 1064)==(232 + 2200))) then while true do if ((((1776 -933) -(11 + 121))<(392 + 2900)) and (v100==(918 -(604 + 314)))) then v101=v77[4 -(1 + 1)];v75[v101]=v75[v101](v12(v75,v101 + ((3775 -(981 + 883)) -(1183 + 727)),v66));break;end end break;end end elseif (((737 -(93 + 623))<=(7781 -5245)) and (v78==(1 + 8))) then if ((v75[v77[7 -5]]==v77[1 + 3]) or ((12572 -9804)>(2289 + 1786))) then v65=v65 + (870 -(699 + 170));else v65=v77[4 -1];end else v75[v77[1666 -(709 + 955)]]();end elseif (((1888 -1285)<=(1 + 1379)) and (v78<=((1793 -(62 + 70)) -((2897 -(782 + 638)) + 169)))) then if (((4628 -3122)<(6372 -2496)) and (v78<=(1448 -((1578 -(1073 + 175)) + 1106)))) then if ((v78>(22 -11)) or ((539 + 150)>(3767 -(1536 + 1275)))) then v75[v77[1732 -(956 + 774)]]=v75[v77[2 + 1]];else v75[v77[7 -5]]=v77[1 + 2]~=(0 -0);end elseif (((2581 -(638 + 960))<=(3144 + 30)) and (v78<=13)) then v75[v77[969 -(110 + 857)]][v77[3 + 0]]=v75[v77[3 + (2 -1)]];elseif ((v78>(1171 -((1428 -483) + 212))) or ((1198 + 2807)>=(4026 + 851))) then v65=v77[17 -(5 + 9)];else local v115=(1 + 69) -(15 + 55);local v116;local v117;local v118;while true do if (((5808 -2972)>(1262 + 144)) and (v115==(0 -0))) then v116=1644 -((1484 -(696 + 465)) + 1321);v117=nil;v115=2 -1;end if ((v115==(1 -0)) or ((4861 -2982)>(2204 + 1905))) then v118=nil;while true do if ((v116==(143 -(127 + (27 -12)))) or (741==(92 + (88 -40)))) then while true do if (((1804 -(485 + 20))==((554 + 1114) -369)) and (v117==(0 -0))) then v118=v77[4 -2];v75[v118]=v75[v118]();break;end end break;end if (((640 + 1274)==1914) and ((0 -0)==v116)) then v117=0 + (0 -0);v118=nil;v116=299 -(8 + 78 + 212);end end break;end end end elseif ((v78<=(6 + 12)) or ((2804 -(120 + 26))<(2869 -((1486 -(962 + 107)) + 905)))) then if ((v78<=(464 -(27 + 59 + 362))) or ((8284 -5546)<=(468 + (2139 -(639 + 1267))))) then local v102=1444 -(28 + 1416);local v103;local v104;local v105;while true do if ((v102==(0 -0)) or ((4788 -1662)<709)) then v103=0 -0;v104=nil;v102=1 + 0;end if (((813 + 835)>(21 + 128)) and (v102==(4 -3))) then v105=nil;while true do if ((v103==(1483 -(666 + (3053 -2237)))) or ((4542 + (748 -408))<=(1349 -985))) then v75[v104 + 1 + 0]=v105;v75[v104]=v105[v77[1 + 3]];break;end if ((v103==((0 -0) + 0)) or ((2571 -(499 + 38))>=(4916 -(9007 -6447)))) then local v137=187 -(73 + (2018 -(991 + 913)));while true do if ((4879>=(4310 -1544)) and (v137==(0 -0))) then v104=v77[64 -(11 + 51)];v105=v75[v77[8 -5]];v137=2 -1;end if ((v137==(3 -2)) or ((286 -(197 + 49))>(208 + (5616 -1743)))) then v103=(271 + 1020) -(939 + 351);break;end end end end break;end end elseif ((((1270 + 2022) -(335 + 260))<(476 + 2838)) and (v78>(371 -(158 + 196)))) then for v123=v77[2],v77[1 + 2] do v75[v123]=nil;end elseif (((4457 -(339 + 266))>(11488 -9142)) and v75[v77[(136 + 148) -(44 + 238)]]) then v65=v65 + 1 + 0;else v65=v77[7 -4];end elseif ((v78<=(15 + 4)) or ((324 + 4522)<(590 + 365))) then local v106=1809 -(1500 + 309);local v107;while true do if (((1057 -(328 + 729))==v106) or (516==(8536 -3809))) then v107=v77[(620 -(590 + 28)) + 0];v75[v107](v75[v107 + 1 + 0]);break;end end elseif ((1372==(911 + (1656 -(325 + 870)))) and (v78>(19 + 1))) then local v119=0 -0;local v120;local v121;while true do if (((10134 -7696)<=(3039 + (3263 -1884))) and (v119==0)) then local v130=0 -0;while true do if (((8709 -(6423 -(48 + 22)))<(4224 -(240 + 123))) and (v130==(0 + 0))) then v120=0 + 0;v121=nil;v130=1431 -(992 + 302 + 136);end if ((v130==(1712 -(98 + 1613))) or ((4764 -(621 + 1134))<=(1603 -545))) then v119=1063 -(625 + 437);break;end end end if (((3593 -(6 + 13))<(5549 -(1567 + 35))) and ((2 -1)==v119)) then while true do if (((7346 -2380)>=(4691 -(103 + 771))) and (v120==(1460 -(48 + 138 + 1274)))) then v121=v77[7 -5];v75[v121](v12(v75,v121 + 1,v77[408 -(147 + 258)]));break;end end break;end end elseif ((v77[2]==v75[v77[1069 -(883 + 182)]]) or (2272==(2641 + 1563))) then v65=v65 + (1 -0);else v65=v77[1 + 2];end v65=v65 + (2 -1);break;end if (((4382 -2502)<((1483 -(503 + 617)) + 1666)) and (v85==(0 + 0))) then local v88=247 -(114 + 133);while true do if (((5760 -1648)==(1379 + 2733)) and (v88==((1515 -(563 + 380)) -(526 + 46)))) then v77=v39[v65];v78=v77[1847 -(1385 + 461)];v88=1 + 0;end if ((v88==(1 + 0)) or (1366>=(4864 -(372 + 369)))) then v85=3 -2;break;end end end end break;end end end end A,B=v27(v10(v69));if  not A[1] then local v79=v30[4][v65] or ?;error(Script error at [   .. v79   .. ]:   .. A[2]);else return v12(A,2,B);end end;end end end;return v29(v28(),{},v16)(...);end if (v17==2) then v22=function()local v42,v43=v1(v15,v18,v18 + 2 + 0);v18=v18 + 2;return (v43 * (1374 -(718 + 400))) + v42;end;v23=nil;v23=function()local a,b,v44,v45=v1(v15,v18,v18 + 3);v18=v18 + (7 -3);return (v45 * 16777216) + (v44 * (245811 -180275)) + (b * (87 + 169)) + a;end;v24=nil;v17=3;end if (v17==3) then v24=function()local v46=697 -((2089 -1403) + 11);local v47;local v48;while true do if (v46==1) then return (( -(2 + 0) * v20(v48,71 -39)) + 1) * (2^(v20(v48,1613 -(1439 + 153),100 -69) -(186 + 586 + 251))) * ((((v20(v48,1 -0,2 + 3 + 15) * ((8 -6)^((21 + 28) -17))) + v47)/((6 -4)^(84 -32))) + 1 + 0);end if (v46==(0 -(0 -0))) then v47=v23();v48=v23();v46=486 -(283 + 202);end end end;v25=nil;v25=function(v33)local v49;if  not v33 then v33=v23();if (v33==(0 -0)) then return ;end end v49=v3(v15,v18,(v18 + v33) -(1 + 0));v18=v18 + v33;local v50={};for Idx=1248 -(410 + 837), #v49 do v50[Idx]=v2(v1(v3(v49,Idx,Idx)));end return v6(v50);end;v26=v23;v17=4;end if (1==v17) then v20=function(v34,v35,v36)if v36 then local v59=682 -(505 + 177);local v60;while true do if (v59==(1035 -(296 + 739))) then v60=(v34/((5 -3)^(v35-(2 -1))))%((3 -1)^(((v36-(1 -0)) -(v35-(722 -(284 + 437)))) + (1 -0) + 0 + 0));return v60-(v60%(1 + 0));end end else local v61=2^(v35-1);return (((v34%(v61 + v61))>=v61) and (2 -1)) or (0 + 0);end end;v21=nil;v21=function()local a=v1(v15,v18,v18);v18=v18 + 1;return a;end;v22=nil;v17=2;end if (v17==4) then v27=nil;v27=function(...)return {...},v11(#,...);end;v28=nil;v28=function()local v51=0;local v52;local v53;local v54;local v55;local v56;local Chunk;local v57;local v58;while true do if (2==v51) then v56=nil;Chunk=nil;v51=1 + 2;end if (v51~=(7 -4)) then else v57=nil;v58=nil;v51=1360 -(971 + 385);end if (v51~=1) then else local v64=1183 -(240 + 943);while true do if (v64==(789 -(365 + 424))) then v54=nil;v55=nil;v64=1 -0;end if (v64~=(1 + 0)) then else v51=2;break;end end end if ((4 -0)==v51) then while true do if (v52==(1806 -(727 + 1079))) then local v70=0 -0;while true do if (v70~=(2 -1)) then else v52=1746 -(403 + 1342);break;end if (v70~=0) then else local v86=0 -0;while true do if ((0 -0)==v86) then v53=0;v54=nil;v86=841 -(793 + 47);end if (v86==1) then v70=1;break;end end end end end if (v52~=(2 + 1)) then else v58=nil;while true do local v80=0 -0;local v81;while true do if (v80==0) then v81=1112 -(619 + 493);while true do if ((1221 -(1039 + 181))~=v81) then else if (v53==(1 -0)) then local v89=731 -(565 + 166);while true do if (0==v89) then local v90=0 + 0;while true do if (v90~=(1 -0)) then else v89=1 + 0;break;end if (v90==(307 -(264 + 43))) then v57=v23();v58={};v90=1;end end end if ((2 -1)~=v89) then else local v91=0;local v92;while true do if (v91~=0) then else v92=0;while true do if (v92~=(1 + 0)) then else v89=5 -3;break;end if (v92==(0 -0)) then for Idx=1529 -(177 + 1351),v57 do local v124=0;local v125;local v126;local v127;local v128;while true do if (2~=v124) then else while true do if (v125~=1) then else v128=nil;while true do if (v126==1) then if (v127==1) then v128=v21()~=(0 -0);elseif (v127==(1700 -(84 + 1614))) then v128=v24();elseif (v127~=3) then else v128=v25();end v58[Idx]=v128;break;end if (v126==(0 -0)) then local v144=1318 -(1186 + 132);while true do if (0~=v144) then else local v149=1989 -(920 + 1069);while true do if (v149~=0) then else v127=v21();v128=nil;v149=1 + 0;end if (1==v149) then v144=1;break;end end end if (v144==1) then v126=1;break;end end end end break;end if (v125~=(0 + 0)) then else local v142=0;local v143;while true do if (0~=v142) then else v143=0 + 0;while true do if (v143~=(75 -(23 + 51))) then else v125=4 -3;break;end if (v143~=0) then else local v150=0 + 0;while true do if (1~=v150) then else v143=1;break;end if (v150~=0) then else v126=0 + 0;v127=nil;v150=1 + 0;end end end end break;end end end end break;end if (v124==(1463 -(281 + 1181))) then v127=nil;v128=nil;v124=2;end if (v124==(0 -0)) then v125=1332 -(1027 + 305);v126=nil;v124=1;end end end Chunk[8 -5]=v21();v92=1;end end break;end end end if (v89==(2 + 0)) then v53=838 -(330 + 506);break;end end end break;end if (v81~=0) then else local v87=0;while true do if (v87~=(1007 -(798 + 208))) then else v81=1 + 0;break;end if (v87~=(1716 -(524 + 1192))) then else if (v53==2) then local v93=0;while true do local v97=0;local v98;while true do if ((0 + 0)~=v97) then else v98=0;while true do if (v98~=(0 -0)) then else if (v93~=1) then else local v131=0 + 0;while true do if (v131~=0) then else for Idx=1,v23() do v56[Idx]=v23();end return Chunk;end end end if (v93~=0) then else for Idx=1,v23() do local v138=0;local v139;local v140;while true do if (v138~=1) then else while true do if (v139~=(0 -0)) then else v140=v21();if (v20(v140,1,1)==0) then local v145=0 + 0;local v146;local v147;local v148;local Inst;while true do if (v145~=1) then else v148=nil;Inst=nil;v145=739 -(243 + 494);end if (v145==2) then while true do if (v146==1) then local v151=0 -0;local v152;while true do if (0~=v151) then else v152=1639 -(255 + 1384);while true do if (v152==(1 -0)) then v146=2;break;end if (v152==(0 -0)) then local v155=0 -0;while true do if (v155==(0 + 0)) then Inst={v22(),v22(),nil,nil};if (v147==0) then local v156=0 + 0;local v157;while true do if (v156~=0) then else v157=0 + 0;while true do if (v157~=(1777 -(294 + 1483))) then else Inst[3]=v22();Inst[4]=v22();break;end end break;end end elseif (v147==(974 -(43 + 930))) then Inst[902 -(561 + 338)]=v23();elseif (v147==(4 -2)) then Inst[3]=v23() -((7 -5)^(1146 -(1047 + 83)));elseif (v147~=3) then else local v158=0 -0;local v159;local v160;while true do if (v158==0) then v159=0;v160=nil;v158=1 -0;end if (v158~=(1 + 0)) then else while true do if (v159~=0) then else v160=0 + 0;while true do if (v160==(1528 -(87 + 1441))) then Inst[3]=v23() -(2^16);Inst[1 + 3]=v22();break;end end break;end end break;end end end v155=1974 -(1608 + 365);end if (v155==1) then v152=1;break;end end end end break;end end end if (v146~=0) then else local v153=688 -(598 + 90);while true do if (v153==(1962 -(311 + 1650))) then v146=1;break;end if (v153~=0) then else v147=v20(v140,2,1770 -(1533 + 234));v148=v20(v140,3 + 1,6);v153=1 + 0;end end end if (3~=v146) then else if (v20(v148,3,2 + 1)~=1) then else Inst[16 -12]=v58[Inst[1 + 3]];end v54[Idx]=Inst;break;end if (v146==2) then local v154=1592 -(1475 + 117);while true do if (v154==1) then v146=2 + 1;break;end if (v154~=(0 + 0)) then else if (v20(v148,1 + 0,1)==1) then Inst[2]=v58[Inst[2]];end if (v20(v148,6 -4,2)~=1) then else Inst[3]=v58[Inst[3]];end v154=1 + 0;end end end end break;end if ((0 + 0)~=v145) then else v146=0 + 0;v147=nil;v145=1 + 0;end end end break;end end break;end if (v138==0) then v139=0;v140=nil;v138=1074 -(218 + 855);end end end for Idx=1,v23() do v55[Idx-(2 -1)]=v28();end v93=1;end break;end end break;end end end end if (v53==0) then local v94=0 + 0;local v95;local v96;while true do if (v94~=(1185 -(958 + 227))) then else v95=0 + 0;v96=nil;v94=1206 -(524 + 681);end if (1~=v94) then else while true do if (v95==0) then v96=88 -(11 + 77);while true do if (v96~=(1 -0)) then else local v132=0;while true do if (v132==(0 + 0)) then v56={};Chunk={v54,v55,nil,v56};v132=1 + 0;end if (v132==(2 -1)) then v96=2 + 0;break;end end end if (2~=v96) then else v53=1;break;end if ((0 + 0)==v96) then local v133=0;while true do if (v133==1) then v96=1 + 0;break;end if ((1886 -(298 + 1588))~=v133) then else local v141=0;while true do if (v141~=0) then else v54={};v55={};v141=2 -1;end if (1==v141) then v133=131 -(40 + 90);break;end end end end end end break;end end break;end end end v87=1;end end end end break;end end end break;end if (v52~=(7 -5)) then else local v71=0;while true do if (v71~=1) then else v52=1 + 2;break;end if (v71==0) then Chunk=nil;v57=nil;v71=3 -2;end end end if (v52~=(287 -(29 + 257))) then else local v72=0;while true do if (v72==(0 + 0)) then v55=nil;v56=nil;v72=1 -0;end if (v72~=1) then else v52=1 + 1;break;end end end end break;end if (v51==(0 -0)) then v52=964 -(770 + 194);v53=nil;v51=1829 -(1355 + 473);end end end;v17=5;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),..,function(v37)if (v1(v37,2)==79) then local v62=0;while true do if (v62==0) then v19=v0(v3(v37,1,1));return ;end end else local v63=0;local a;while true do if (v63==0) then a=v2(v0(v37,16));if v19 then local v82=0;local b;while true do if (v82==1) then return b;end if (v82==0) then b=v5(a,v19);v19=nil;v82=1;end end else return a;end break;end end end end);v20=nil;v17=1;end end end vv8(),...);end
